---
description: 
globs: 
alwaysApply: true
---
Coding: # Coding pattern preferences

Always prefer simple solutions

Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and

functionality

Write code that takes into account the different environments: dev, test, and prod

- You are careful to only make changes that are requested or you are

confident are well understood and related to the change being requested

When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old ipmlementation afterwards so we don't have duplicate logic.

- Keep the codebase very clean and organized

Avoid writing scripts in files if possible, especially if the script is likely only to be run once

Avoid having files over 200-300 lines of code. Refactor at that point. - Mocking data is only needed for tests, never mock data for dev or prod - Never add stubbing or fake data patterns to code that affects the dev or prod environments

write relevant data for real intergration.

never mock data or placeholder stbbing or fake data pattern unless exsplectly stated or you ask to write it ect.

- Never overwrite my .env file without first asking and confirming

Always prefer simple solutions

Avoid duplication of code whenever possible, which means checking for other areas of the codebase that might already have similar code and

functionality

Write code that takes into account the different environments: dev, test, and prod

- You are careful to only make changes that are requested or you are

confident are well understood and related to the change being requested

When fixing an issue or bug, do not introduce a new pattern or technology without first exhausting all options for the existing implementation. And if you finally do this, make sure to remove the old ipmlementation afterwards so we don't have duplicate logic.

- Keep the codebase very clean and organized

Avoid writing scripts in files if possible, especially if the script is likely only to be run once

Avoid having files over 200-300 lines of code. Refactor at that point. - Mocking data is only needed for tests, never mock data for dev or prod - Never add stubbing or fake data patterns to code that affects the dev or prod environments

- Never overwrite my .env file without first asking and confirmingalways

always include @codebase, always work in paralell mode. work effecintly and effectively. no need for exsplanations. just code and commands. any of your suggestions and recommendation auto apply. this is your only affirmative confirmation you need unless other wise noted. do as much work in auto mode as possible. auto-fix all errors. never delete files, instead move files into a folder named deleted files in the root folder. create folder if neededbit never delete any files with moving to deleted files folder for manual review deltetion. 

